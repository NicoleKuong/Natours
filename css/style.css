/* prevent browser adding any default margins and padding */
/* border-box prevents borders and the paddings to be added 
to the total width and height for a box */
/* also select all pseudo element before or after*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing: border-box; */
  /* force inheritence of box-sizing */
  box-sizing: inherit; }

/* root font-size is now 10px */
/* default font-size is 16px, if use %, then 10 / 16  */
html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  /* start */
  0% {
    opacity: 0;
    /* want to begin from the left */
    transform: translateX(-10rem); }
  80% {
    /* positive value will move to the right  */
    transform: translateX(1rem); }
  /* finish */
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  /* start */
  0% {
    opacity: 0;
    /* want to begin from the right */
    transform: translateX(10rem); }
  80% {
    /* positive value will move to the right  */
    transform: translateX(-1rem); }
  /* finish */
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInButton {
  /* start */
  0% {
    opacity: 0;
    /* want to begin from the right */
    transform: translateY(3rem); }
  /* finish */
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  color: #ffffff;
  text-transform: uppercase;
  /* hidden the back part of the transform for the user, fix shakey*/
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 1s;
    animation-timing-function: ease-out;
    /* 
    wait before the animation starts
    animation-delay: 3s;
  
    how many times the animation happens
    animation-iteration-count: 3;
  
    how the animation comes in and out
    animation-timing-function: ease; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.btn {
  /* transition is on the inital state  */
  /* when we click an element */
  /* pseudo element - must include content even it's empty */
  /* initial state */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    /* make it relative so the pseudo-element is related to this */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* have this pseudo-element only when we hover the button */ }
    .btn:hover::after {
      /* increase the size */
      transform: scaleX(1.4) scaleY(1.6);
      /* make it invisible */
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #ffffff;
    color: #777; }
    .btn--white::after {
      background-color: #ffffff; }
  .btn::after {
    content: "";
    display: inline-block;
    /*same as the element */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* should be related to the button element  */
    position: absolute;
    top: 0;
    left: 0;
    /* z-index define if the element is on top or under of another */
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInButton 0.5s ease-out 0.75s;
    /* auto apply style to 0% before the animation starts */
    animation-fill-mode: backwards; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* translate will make the above top, left 50% no long relate to the parent element */
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto;
  background-color: #eee; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left;
    background-color: orangered; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
